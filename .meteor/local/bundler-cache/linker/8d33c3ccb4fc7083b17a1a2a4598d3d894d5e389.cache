[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDate = Package['es5-shim'].Date;\nparseInt = Package['es5-shim'].parseInt;\nECMAScript = Package.ecmascript.ECMAScript;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nbabelHelpers = Package['babel-runtime'].babelHelpers;\nPromise = Package.promise.Promise;\nMap = Package['ecmascript-collections'].Map;\nSet = Package['ecmascript-collections'].Set;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// tictactoe.js                                                        //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nvar Table = new Mongo.Collection(\"table\");                             // 1\nvar Counter = new Mongo.Collection(\"counter\");                         // 2\nvar Turn = new Mongo.Collection(\"turn\");                               // 3\nvar Status = new Mongo.Collection(\"status\");                           // 4\nif (Meteor.isClient) {                                                 // 5\n  // counter starts at 0                                               //\n  Session.setDefault('counter', 0);                                    // 7\n                                                                       //\n  Template.board.helpers({                                             // 10\n    rows: function () {                                                // 11\n      return Table.find({});                                           // 12\n    }                                                                  //\n  });                                                                  //\n                                                                       //\n  Template.row.helpers({                                               // 16\n    columns: function (parentContext) {                                // 17\n      return this.cols;                                                // 18\n    }                                                                  //\n  });                                                                  //\n                                                                       //\n  var isRowWinner = function (row) {                                   // 22\n    var mark = row[0];                                                 // 23\n    for (var entry = 0; entry < row.length; entry++) {                 // 24\n      if (mark == 0 || mark != row[entry]) {                           // 25\n        return 0;                                                      // 26\n      }                                                                //\n    }                                                                  //\n    return mark;                                                       // 29\n  };                                                                   //\n                                                                       //\n  var isColWinner = function (board, col) {                            // 32\n    var mark = board[0][col];                                          // 33\n    for (var i = 0; i < board.length; i++) {                           // 34\n      var entry = board[i][col];                                       // 35\n      if (entry == 0 || mark != entry) {                               // 36\n        return 0;                                                      // 37\n      }                                                                //\n    }                                                                  //\n    return mark;                                                       // 40\n  };                                                                   //\n                                                                       //\n  var isDiagWinner = function (board) {                                // 43\n    var mark = board[0][0];                                            // 44\n    var failure = false;                                               // 45\n    for (var i = 0; i < board.length; i++) {                           // 46\n      var j = i;                                                       // 47\n      var entry = board[i][j];                                         // 48\n      if (entry == 0 || mark != entry) {                               // 49\n        failure = true;                                                // 50\n      }                                                                //\n    }                                                                  //\n                                                                       //\n    if (!failure) {                                                    // 54\n      return mark;                                                     // 55\n    }                                                                  //\n                                                                       //\n    var mark = board[0][board.length - 1];                             // 58\n    for (var i = 0; i < board.length; i++) {                           // 59\n      var j = board.length - i - 1;                                    // 60\n      var entry = board[i][j];                                         // 61\n      if (entry == 0 || entry != mark) {                               // 62\n        return 0;                                                      // 63\n      }                                                                //\n    }                                                                  //\n    return mark;                                                       // 66\n  };                                                                   //\n                                                                       //\n  var checkRows = function (board) {                                   // 69\n    for (var i in babelHelpers.sanitizeForInObject(board)) {           // 70\n      var result = isRowWinner(board[i]);                              // 71\n      if (result) {                                                    // 72\n        return result;                                                 // 73\n      }                                                                //\n    }                                                                  //\n    return 0;                                                          // 76\n  };                                                                   //\n                                                                       //\n  var checkCols = function (board) {                                   // 79\n    for (var i in babelHelpers.sanitizeForInObject(board)) {           // 80\n      var result = isColWinner(board, i);                              // 81\n      if (result) {                                                    // 82\n        return result;                                                 // 83\n      }                                                                //\n    }                                                                  //\n    return 0;                                                          // 86\n  };                                                                   //\n                                                                       //\n  Template.row.events({                                                // 89\n    'click td': function (event, template) {                           // 90\n      var row = Table.findOne(template.data._id);                      // 91\n      var cols = row.cols;                                             // 92\n                                                                       //\n      var mark = cols[this.col - 1].playerMark;                        // 94\n      var turn = Turn.findOne({});                                     // 95\n                                                                       //\n      if (mark != 0 || turn.playerTurn != Session.get('player')) {     // 97\n        return;                                                        // 98\n      }                                                                //\n                                                                       //\n      cols[this.col - 1].playerMark = Session.get('player');           // 101\n      var next = Session.get('player') == 1 ? 2 : 1;                   // 102\n      Table.update(template.data._id, { $set: { cols: cols } });       // 103\n      Turn.update(turn._id, { $set: { playerTurn: next } });           // 104\n                                                                       //\n      //create board                                                   //\n      var board = [];                                                  // 108\n      var row1 = new Array(3);                                         // 109\n      var row2 = new Array(3);                                         // 110\n      var row3 = new Array(3);                                         // 111\n      board.push(row1);                                                // 112\n      board.push(row2);                                                // 113\n      board.push(row3);                                                // 114\n      var data = Table.find().fetch();                                 // 115\n                                                                       //\n      Table.find().forEach(function (doc) {                            // 117\n        var row = doc.row - 1;                                         // 118\n        for (var col in babelHelpers.sanitizeForInObject(doc.cols)) {  // 119\n          board[row][col] = doc.cols[col].playerMark;                  // 120\n        }                                                              //\n      });                                                              //\n                                                                       //\n      var rowsResult = checkRows(board);                               // 124\n      if (rowsResult) {                                                // 125\n        Status.update({}, { $set: rowsResult });                       // 126\n        return;                                                        // 127\n      }                                                                //\n                                                                       //\n      var colResult = checkCols(board);                                // 130\n      if (colResult) {                                                 // 131\n        Status.update({}, { $set: colResult });                        // 132\n        return;                                                        // 133\n      }                                                                //\n                                                                       //\n      var diagResult = isDiagWinner(board);                            // 136\n      if (diagResult) {                                                // 137\n        Status.update({}, { $set: diagResult });                       // 138\n        return;                                                        // 139\n      }                                                                //\n    }                                                                  //\n  });                                                                  //\n                                                                       //\n  Template.cell.helpers({                                              // 145\n    getImage: function () {                                            // 146\n      if (this.playerMark == 0) {                                      // 147\n        return '';                                                     // 148\n      } else if (this.playerMark == 1) {                               //\n        return 'X';                                                    // 150\n      } else {                                                         //\n        return 'O';                                                    // 152\n      }                                                                //\n    }                                                                  //\n  });                                                                  //\n                                                                       //\n  Template.reset.events({                                              // 157\n    'click button': function () {                                      // 158\n      var countDoc = Counter.findOne({});                              // 159\n      Table.find({}).forEach(function (doc) {                          // 160\n        var cols = doc.cols;                                           // 161\n        cols.forEach(function (cell) {                                 // 162\n          cell.playerMark = 0;                                         // 163\n          Table.update(doc._id, { $set: { cols: cols } });             // 164\n        });                                                            //\n      });                                                              //\n      Turn.find({}).forEach(function (doc) {                           // 167\n        Turn.update(doc._id, { $set: { playerTurn: 1 } });             // 168\n      });                                                              //\n                                                                       //\n      Status.update({}, { $set: { winner: 0 } });                      // 171\n    }                                                                  //\n  });                                                                  //\n                                                                       //\n  Template.gameStatus.helpers({                                        // 175\n    whoseTurn: function () {                                           // 176\n      var turn = Turn.findOne().playerTurn;                            // 177\n      var player = Session.get('player');                              // 178\n      var winner = status.findOne().winner;                            // 179\n      if (winner) {                                                    // 180\n        if (winner == player) {                                        // 181\n          return \"You Won!\";                                           // 182\n        } else {                                                       //\n          return \"You Lost!\";                                          // 184\n        }                                                              //\n      }                                                                //\n      if (turn == player) {                                            // 187\n        return \"Your Move\";                                            // 188\n      } else {                                                         //\n        return \"Waiting for Player \" + turn;                           // 190\n      }                                                                //\n    }                                                                  //\n  });                                                                  //\n                                                                       //\n  Template.registerHelper('getPlayer', function () {                   // 196\n    return Session.get('player');                                      // 197\n  });                                                                  //\n}                                                                      //\n                                                                       //\nif (Meteor.isServer) {                                                 // 202\n  Meteor.startup(function () {                                         // 203\n    // code to run on server at startup                                //\n  });                                                                  //\n}                                                                      //\n                                                                       //\nFlowRouter.route('/player1', {                                         // 208\n  action: function () {                                                // 209\n    Session.set('player', 1);                                          // 210\n  }                                                                    //\n});                                                                    //\n                                                                       //\nFlowRouter.route('/player2', {                                         // 214\n  action: function () {                                                // 215\n    Session.set('player', 2);                                          // 216\n  }                                                                    //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/tictactoe.js","sourceMap":{"version":3,"sources":["meteor://💻app/tictactoe.js"],"names":[],"mappings":"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","file":"/tictactoe.js","sourcesContent":["var Table = new Mongo.Collection(\"table\");\nvar Counter = new Mongo.Collection(\"counter\");\nvar Turn = new Mongo.Collection(\"turn\");\nvar Status = new Mongo.Collection(\"status\");\nif (Meteor.isClient) {\n  // counter starts at 0\n  Session.setDefault('counter', 0);\n\n\n  Template.board.helpers({\n  \trows: function() {\n  \t\treturn Table.find({});\t\t\t\n  \t}\n  });\n\n  Template.row.helpers({\n  \tcolumns: function(parentContext) {\n  \t\treturn this.cols;\n  \t}\n  });\n\n  var isRowWinner = function(row) {\n    var mark = row[0]\n    for (var entry = 0; entry < row.length; entry++) {\n      if (mark == 0 || mark != row[entry]) {\n        return 0;\n      }\n    }\n    return mark;\n  }\n\n  var isColWinner = function(board, col) {\n    var mark = board[0][col];\n    for (var i = 0; i < board.length; i++) {\n      var entry = board[i][col];\n      if (entry == 0 || mark != entry) {\n        return 0;\n      }\n    }\n    return mark;\n  }\n\n  var isDiagWinner = function(board) {\n    var mark = board[0][0];\n    var failure = false;\n    for (var i = 0; i < board.length; i++) {\n      var j = i;\n      var entry = board[i][j];\n      if (entry == 0 || mark != entry) {\n        failure = true;\n      }\n    }\n\n    if (!failure) {\n      return mark;\n    } \n\n    var mark = board[0][board.length-1];\n    for (var i = 0; i < board.length; i++) {\n      var j = board.length - i - 1;\n      var entry = board[i][j];\n      if (entry == 0 || entry != mark) {\n        return 0;\n      }\n    }\n    return mark;\n  }\n\n  var checkRows = function(board) {\n  \tfor (var i in board) {\n  \t\tvar result = isRowWinner(board[i]);\n  \t\tif (result) {\n  \t\t\treturn result;\n  \t\t}\n  \t}\n  \treturn 0;\n  }\n\n  var checkCols = function(board) {\n  \tfor (var i in board) {\n  \t\tvar result =  isColWinner(board, i);\n  \t\tif (result) {\n  \t\t\treturn result;\n  \t\t}\n  \t}\n  \treturn 0;\n  }\n\n  Template.row.events({\n  \t'click td': function(event, template) {\n  \t\tvar row = Table.findOne(template.data._id);\n  \t\tvar cols = row.cols\n\n  \t\tvar mark = cols[this.col-1].playerMark;\n  \t\tvar turn = Turn.findOne({});\n\n  \t\tif (mark != 0 || turn.playerTurn != Session.get('player')) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tcols[this.col-1].playerMark = Session.get('player');\n  \t\tvar next = (Session.get('player') == 1) ? 2 : 1;\n  \t\tTable.update(template.data._id, {$set: {cols: cols}});\n  \t\tTurn.update(turn._id, {$set: {playerTurn: next}});\n\n\n  \t\t//create board\n  \t\tvar board = [];\n  \t\tvar row1 = new Array(3);\n  \t\tvar row2 = new Array(3);\n  \t\tvar row3 = new Array(3);\n  \t\tboard.push(row1);\n  \t\tboard.push(row2);\n  \t\tboard.push(row3);\n  \t\tvar data = Table.find().fetch();\n\n  \t\tTable.find().forEach(function(doc){\n  \t\t\tvar row = doc.row - 1;\n  \t\t\tfor (var col in doc.cols) {\n  \t\t\t\tboard[row][col] = doc.cols[col].playerMark\n  \t\t\t}\n  \t\t});\n\n  \t\tvar rowsResult = checkRows(board);\n  \t\tif (rowsResult) { \n  \t\t\tStatus.update({}, {$set: rowsResult});\n  \t\t\treturn;\n  \t\t}\n\n  \t\tvar colResult = checkCols((board));\n  \t\tif (colResult) {\n  \t\t\tStatus.update({}, {$set: colResult});\n  \t\t\treturn;\n  \t\t}\n\n  \t\tvar diagResult = isDiagWinner(board);\n  \t\tif (diagResult) {\n  \t\t\tStatus.update({}, {$set: diagResult});\n  \t\t\treturn;\n  \t\t}\n\n  \t}\n  });\n\n  Template.cell.helpers({\n  \tgetImage: function() {\n  \t\tif (this.playerMark == 0) {\n  \t\t\treturn '';\n  \t\t} else if (this.playerMark == 1) {\n  \t\t\treturn 'X';\n  \t\t} else {\n  \t\t\treturn 'O';\n  \t\t}\n  \t}\n  });\n\n  Template.reset.events({\n  \t'click button': function() {\n  \t\tvar countDoc = Counter.findOne({});\n  \t\tTable.find({}).forEach(function (doc) {\n  \t\t\tvar cols = doc.cols\n  \t\t\tcols.forEach(function(cell) {\n  \t\t\t\tcell.playerMark = 0;\n  \t\t\t\tTable.update(doc._id, {$set: {cols: cols}});\n  \t\t\t});\n  \t\t});\n  \t\tTurn.find({}).forEach(function(doc) { \n  \t\t\tTurn.update(doc._id, {$set: {playerTurn: 1}});\n  \t\t});\n\n  \t\tStatus.update({}, {$set : {winner: 0}});\n  \t}\n  });\n\n  Template.gameStatus.helpers({\n  \twhoseTurn: function() {\n  \t\tvar turn = Turn.findOne().playerTurn;\n  \t\tvar player = Session.get('player');\n  \t\tvar winner = status.findOne().winner;\n  \t\tif (winner) {\n  \t\t\tif (winner == player) {\n  \t\t\t\treturn \"You Won!\";\n  \t\t\t} else {\n  \t\t\t\treturn \"You Lost!\";\n  \t\t\t}\n  \t\t}\n  \t\tif (turn == player) {\n  \t\t\treturn \"Your Move\";\n  \t\t} else {\n  \t\t\treturn \"Waiting for Player \" + turn;\n  \t\t}\n\n  \t}\n  });\n\n  Template.registerHelper('getPlayer', function(){\n  \treturn Session.get('player');\n  });\n\n}\n\nif (Meteor.isServer) {\n\tMeteor.startup(function () {\n    // code to run on server at startup\n\t});\n}\n\nFlowRouter.route('/player1', { \n  action: function() { \n    Session.set('player', 1); \n  } \n}); \n \nFlowRouter.route('/player2', { \n  action: function() { \n    Session.set('player', 2); \n  } \n}); \n"]}}]