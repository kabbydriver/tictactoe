[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nSession = Package.session.Session;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDate = Package['es5-shim'].Date;\nparseInt = Package['es5-shim'].parseInt;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nbabelHelpers = Package['babel-runtime'].babelHelpers;\nPromise = Package.promise.Promise;\nMap = Package['ecmascript-collections'].Map;\nSet = Package['ecmascript-collections'].Set;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){\nTemplate.body.addContent((function() {\n  var view = this;\n  return [ HTML.Raw(\"<h1>Welcome to Meteor!</h1>\\n  \"), Spacebars.include(view.lookupTemplate(\"hello\")), \"\\n\t\", Spacebars.include(view.lookupTemplate(\"board\")), \"\\n\t\", Spacebars.include(view.lookupTemplate(\"reset\")) ];\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"board\");\nTemplate[\"board\"] = new Template(\"Template.board\", (function() {\n  var view = this;\n  return HTML.TABLE(\"\\n\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"rows\"));\n  }, function() {\n    return [ \" \\n\t\", HTML.TR(\"\\n\t\t\", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"columns\"));\n    }, function() {\n      return [ \"\\n\t\t\", HTML.TD(Blaze.View(\"lookup:.\", function() {\n        return Spacebars.mustache(view.lookup(\".\"));\n      })), \"\\n\t\t\" ];\n    }), \"\\n\t\"), \"\\n\t\" ];\n  }), \"\\n\");\n}));\n\nTemplate.__checkName(\"hello\");\nTemplate[\"hello\"] = new Template(\"Template.hello\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<button>Click Me</button>\\n  \"), HTML.P(\"You've pressed the button \", Blaze.View(\"lookup:counter.count\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"counter\"), \"count\"));\n  }), \" times.\") ];\n}));\n\nTemplate.__checkName(\"reset\");\nTemplate[\"reset\"] = new Template(\"Template.reset\", (function() {\n  var view = this;\n  return HTML.Raw(\"<button>Reset</button>\");\n}));\n\n}).call(this);\n","servePath":"/template.tictactoe.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/template.tictactoe.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/template.tictactoe.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return [ HTML.Raw(\"<h1>Welcome to Meteor!</h1>\\n  \"), Spacebars.include(view.lookupTemplate(\"hello\")), \"\\n\t\", Spacebars.include(view.lookupTemplate(\"board\")), \"\\n\t\", Spacebars.include(view.lookupTemplate(\"reset\")) ];\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"board\");\nTemplate[\"board\"] = new Template(\"Template.board\", (function() {\n  var view = this;\n  return HTML.TABLE(\"\\n\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"rows\"));\n  }, function() {\n    return [ \" \\n\t\", HTML.TR(\"\\n\t\t\", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"columns\"));\n    }, function() {\n      return [ \"\\n\t\t\", HTML.TD(Blaze.View(\"lookup:.\", function() {\n        return Spacebars.mustache(view.lookup(\".\"));\n      })), \"\\n\t\t\" ];\n    }), \"\\n\t\"), \"\\n\t\" ];\n  }), \"\\n\");\n}));\n\nTemplate.__checkName(\"hello\");\nTemplate[\"hello\"] = new Template(\"Template.hello\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<button>Click Me</button>\\n  \"), HTML.P(\"You've pressed the button \", Blaze.View(\"lookup:counter.count\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"counter\"), \"count\"));\n  }), \" times.\") ];\n}));\n\nTemplate.__checkName(\"reset\");\nTemplate[\"reset\"] = new Template(\"Template.reset\", (function() {\n  var view = this;\n  return HTML.Raw(\"<button>Reset</button>\");\n}));\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// tictactoe.js                                                        //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nvar Table = new Mongo.Collection(\"table\");                             // 1\nvar Counter = new Mongo.Collection(\"counter\");                         // 2\n                                                                       //\nif (Meteor.isClient) {                                                 // 4\n\t// counter starts at 0                                                //\n\tSession.setDefault('counter', 0);                                     // 6\n                                                                       //\n\tTemplate.board.helpers({                                              // 9\n\t\trows: function () {                                                  // 10\n\t\t\tconsole.log(\"Calling Rows\");                                        // 11\n\t\t\treturn Table.find({}).fetch();                                      // 12\n\t\t},                                                                   //\n\t\tcolumns: function () {                                               // 14\n\t\t\tconsole.log(\"Cols: \" + this.cols);                                  // 15\n\t\t\treturn this.cols;                                                   // 16\n\t\t}                                                                    //\n                                                                       //\n\t});                                                                   //\n                                                                       //\n\tTemplate.hello.helpers({                                              // 23\n\t\tcounter: function () {                                               // 24\n\t\t\tvar count = Counter.findOne({});                                    // 25\n\t\t\tconsole.log(\"Calling Counter\");                                     // 26\n\t\t\treturn count;                                                       // 27\n\t\t}                                                                    //\n\t});                                                                   //\n                                                                       //\n\tTemplate.hello.events({                                               // 31\n\t\t'click button': function () {                                        // 32\n\t\t\t// increment the counter when button is clicked                     //\n\t\t\tvar countDoc = Counter.findOne({});                                 // 34\n\t\t\tconsole.log(\"Button Clicked\");                                      // 35\n\t\t\tCounter.update(countDoc._id, { $set: {                              // 36\n\t\t\t\t\tcount: countDoc.count + 1                                         // 37\n\t\t\t\t}                                                                  //\n\t\t\t});                                                                 //\n\t\t},                                                                   //\n\t\t'click p': function () {                                             // 41\n\t\t\tconsole.log(Counter.findOne({}).count);                             // 42\n\t\t}                                                                    //\n\t});                                                                   //\n                                                                       //\n\tTemplate.reset.events({                                               // 46\n\t\t'click button': function () {                                        // 47\n\t\t\tvar countDoc = Counter.findOne({});                                 // 48\n\t\t\tconsole.log(\"Reset Clicked\");                                       // 49\n\t\t\tCounter.update(countDoc._id, { $set: { count: 0 } });               // 50\n\t\t}                                                                    //\n\t});                                                                   //\n}                                                                      //\n                                                                       //\nif (Meteor.isServer) {                                                 // 55\n\tMeteor.startup(function () {                                          // 56\n\t\t// code to run on server at startup                                  //\n\t});                                                                   //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/tictactoe.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/tictactoe.js"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AAC1C,IAAI,OAAO,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;;AAE9C,IAAI,MAAM,CAAC,QAAQ,EAAE;;AAEnB,QAAO,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;;AAGlC,SAAQ,CAAC,KAAK,CAAC,OAAO,CAAC;AACtB,MAAI,EAAE,YAAW;AAChB,UAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AAC5B,UAAO,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;GAC9B;AACD,SAAO,EAAE,YAAW;AACnB,UAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;AAClC,UAAO,IAAI,CAAC,IAAI;GAChB;;EAED,CAAC,CAAC;;AAIF,SAAQ,CAAC,KAAK,CAAC,OAAO,CAAC;AACrB,SAAO,EAAE,YAAY;AACtB,OAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AAChC,UAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAC/B,UAAO,KAAK,CAAC;GACX;EACF,CAAC,CAAC;;AAEH,SAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;AACpB,gBAAc,EAAE,YAAY;;AAE7B,OAAI,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;AAClC,UAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;AAC9B,UAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAC,IAAI,EAAE;AAClC,UAAK,EAAG,QAAQ,CAAC,KAAK,GAAC,CAAE;KACzB;IACD,CAAC,CAAC;GACD;AACH,WAAS,EAAE,YAAW;AACrB,UAAO,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;GACvC;EACA,CAAC,CAAC;;AAEJ,SAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;AACrB,gBAAc,EAAE,YAAW;AAC1B,OAAI,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AACnC,UAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;AAC7B,UAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAC,IAAI,EAAE,EAAC,KAAK,EAAE,CAAC,EAAC,EAAC,CAAC,CAAC;GACjD;EACD,CAAC,CAAC;CACH;;AAED,IAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,OAAM,CAAC,OAAO,CAAC,YAAY;;EAE1B,CAAC,CAAC;CACJ,wE","file":"/tictactoe.js","sourcesContent":["var Table = new Mongo.Collection(\"table\");\nvar Counter = new Mongo.Collection(\"counter\");\n\nif (Meteor.isClient) {\n  // counter starts at 0\n  Session.setDefault('counter', 0);\n\n\n\tTemplate.board.helpers({\n\t\trows: function() {\n\t\t\tconsole.log(\"Calling Rows\");\n\t\t\treturn Table.find({}).fetch();\t\t\t\n\t\t},\n\t\tcolumns: function() {\n\t\t\tconsole.log(\"Cols: \" + this.cols);\n\t\t\treturn this.cols\n\t\t}\n\n\t});\n\n\n\n  Template.hello.helpers({\n    counter: function () {\n\t\t\tvar count = Counter.findOne({});\n\t\t\tconsole.log(\"Calling Counter\");\n\t\t\treturn count;\n    }\n  });\n\n  Template.hello.events({\n    'click button': function () {\n      // increment the counter when button is clicked\n\t\t\tvar countDoc = Counter.findOne({})\n\t\t\tconsole.log(\"Button Clicked\");\t\n\t\t\tCounter.update(countDoc._id, {$set: { \n\t\t\t\t\tcount: (countDoc.count+1) \n\t\t\t\t}\n\t\t\t});\n    },\n\t\t'click p': function() {\n\t\t\tconsole.log(Counter.findOne({}).count);\n\t\t}\n  });\n\n\tTemplate.reset.events({\n\t\t'click button': function() {\n\t\t\tvar countDoc = Counter.findOne({});\n\t\t\tconsole.log(\"Reset Clicked\");\n\t\t\tCounter.update(countDoc._id, {$set: {count: 0}});\n\t\t}\n\t});\n}\n\nif (Meteor.isServer) {\n  Meteor.startup(function () {\n    // code to run on server at startup\n  });\n}\n"]}}]