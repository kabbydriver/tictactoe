[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nSession = Package.session.Session;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDate = Package['es5-shim'].Date;\nparseInt = Package['es5-shim'].parseInt;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nbabelHelpers = Package['babel-runtime'].babelHelpers;\nPromise = Package.promise.Promise;\nMap = Package['ecmascript-collections'].Map;\nSet = Package['ecmascript-collections'].Set;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){\nTemplate.body.addContent((function() {\n  var view = this;\n  return [ HTML.Raw(\"<h1>Welcome to Meteor!</h1>\\n  \"), Spacebars.include(view.lookupTemplate(\"hello\")), \"\\n\t\", Spacebars.include(view.lookupTemplate(\"board\")), \"\\n\t\", Spacebars.include(view.lookupTemplate(\"reset\")) ];\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"board\");\nTemplate[\"board\"] = new Template(\"Template.board\", (function() {\n  var view = this;\n  return HTML.TABLE(\"\\n\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"rows\"));\n  }, function() {\n    return [ \" \\n\t\t\", Spacebars.include(view.lookupTemplate(\"row\")), \"\\n\t\" ];\n  }), \"\\n\");\n}));\n\nTemplate.__checkName(\"row\");\nTemplate[\"row\"] = new Template(\"Template.row\", (function() {\n  var view = this;\n  return HTML.TR(\"\\n\t\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"columns\"));\n  }, function() {\n    return [ \"\t\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"cell\")), \"\\n\t\t\" ];\n  }), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"cell\");\nTemplate[\"cell\"] = new Template(\"Template.cell\", (function() {\n  var view = this;\n  return HTML.TD(Blaze.View(\"lookup:col\", function() {\n    return Spacebars.mustache(view.lookup(\"col\"));\n  }), \", \", Blaze.View(\"lookup:playerMark\", function() {\n    return Spacebars.mustache(view.lookup(\"playerMark\"));\n  }));\n}));\n\nTemplate.__checkName(\"hello\");\nTemplate[\"hello\"] = new Template(\"Template.hello\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<button>Click Me</button>\\n  \"), HTML.P(\"You've pressed the button \", Blaze.View(\"lookup:counter.count\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"counter\"), \"count\"));\n  }), \" times.\") ];\n}));\n\nTemplate.__checkName(\"reset\");\nTemplate[\"reset\"] = new Template(\"Template.reset\", (function() {\n  var view = this;\n  return HTML.Raw(\"<button>Reset</button>\");\n}));\n\n}).call(this);\n","servePath":"/template.tictactoe.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/template.tictactoe.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/template.tictactoe.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return [ HTML.Raw(\"<h1>Welcome to Meteor!</h1>\\n  \"), Spacebars.include(view.lookupTemplate(\"hello\")), \"\\n\t\", Spacebars.include(view.lookupTemplate(\"board\")), \"\\n\t\", Spacebars.include(view.lookupTemplate(\"reset\")) ];\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"board\");\nTemplate[\"board\"] = new Template(\"Template.board\", (function() {\n  var view = this;\n  return HTML.TABLE(\"\\n\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"rows\"));\n  }, function() {\n    return [ \" \\n\t\t\", Spacebars.include(view.lookupTemplate(\"row\")), \"\\n\t\" ];\n  }), \"\\n\");\n}));\n\nTemplate.__checkName(\"row\");\nTemplate[\"row\"] = new Template(\"Template.row\", (function() {\n  var view = this;\n  return HTML.TR(\"\\n\t\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"columns\"));\n  }, function() {\n    return [ \"\t\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"cell\")), \"\\n\t\t\" ];\n  }), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"cell\");\nTemplate[\"cell\"] = new Template(\"Template.cell\", (function() {\n  var view = this;\n  return HTML.TD(Blaze.View(\"lookup:col\", function() {\n    return Spacebars.mustache(view.lookup(\"col\"));\n  }), \", \", Blaze.View(\"lookup:playerMark\", function() {\n    return Spacebars.mustache(view.lookup(\"playerMark\"));\n  }));\n}));\n\nTemplate.__checkName(\"hello\");\nTemplate[\"hello\"] = new Template(\"Template.hello\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<button>Click Me</button>\\n  \"), HTML.P(\"You've pressed the button \", Blaze.View(\"lookup:counter.count\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"counter\"), \"count\"));\n  }), \" times.\") ];\n}));\n\nTemplate.__checkName(\"reset\");\nTemplate[\"reset\"] = new Template(\"Template.reset\", (function() {\n  var view = this;\n  return HTML.Raw(\"<button>Reset</button>\");\n}));\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// tictactoe.js                                                        //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nvar Table = new Mongo.Collection(\"table\");                             // 1\nvar Counter = new Mongo.Collection(\"counter\");                         // 2\n                                                                       //\nif (Meteor.isClient) {                                                 // 4\n  // counter starts at 0                                               //\n  Session.setDefault('counter', 0);                                    // 6\n                                                                       //\n  Template.board.helpers({                                             // 9\n    rows: function () {                                                // 10\n      console.log(\"Calling Rows\");                                     // 11\n      return Table.find({}).fetch();                                   // 12\n    }                                                                  //\n  });                                                                  //\n                                                                       //\n  Template.row.helpers({                                               // 16\n    columns: function (parentContext) {                                // 17\n      return this.cols;                                                // 18\n    }                                                                  //\n  });                                                                  //\n                                                                       //\n  Template.row.events({                                                // 22\n    'click td': function (event, template) {                           // 23\n      console.log(\"Clicked: \" + template.data.row + \", \" + this.col);  // 24\n      var row = Table.findOne(template.data._id);                      // 25\n      var cols = row.cols;                                             // 26\n                                                                       //\n      cols[this.col - 1].playerMark++;                                 // 29\n      Table.update(template.data._id, { $set: { cols: cols } });       // 30\n    }                                                                  //\n  });                                                                  //\n                                                                       //\n  Template.hello.helpers({                                             // 34\n    counter: function () {                                             // 35\n      var count = Counter.findOne({});                                 // 36\n      console.log(\"Calling Counter\");                                  // 37\n      return count;                                                    // 38\n    }                                                                  //\n  });                                                                  //\n                                                                       //\n  Template.hello.events({                                              // 42\n    'click button': function () {                                      // 43\n      // increment the counter when button is clicked                  //\n      var countDoc = Counter.findOne({});                              // 45\n      console.log(\"Button Clicked\");                                   // 46\n      Counter.update(countDoc._id, { $set: { count: countDoc.count + 1 } });\n    },                                                                 //\n                                                                       //\n    'click p': function () {                                           // 50\n      console.log(Counter.findOne({}).count);                          // 51\n    }                                                                  //\n  });                                                                  //\n                                                                       //\n  Template.reset.events({                                              // 55\n    'click button': function () {                                      // 56\n      var countDoc = Counter.findOne({});                              // 57\n      console.log(\"Reset Clicked\");                                    // 58\n      Table.find({}).forEach(function (doc) {                          // 59\n        var cols = doc.cols;                                           // 60\n        console.log(cols);                                             // 61\n        cols.forEach(function (cell) {                                 // 62\n          cell.playerMark = 0;                                         // 63\n          Table.update(doc._id, { $set: { cols: cols } });             // 64\n        });                                                            //\n      });                                                              //\n    }                                                                  //\n  });                                                                  //\n}                                                                      //\n                                                                       //\nif (Meteor.isServer) {                                                 // 71\n  Meteor.startup(function () {                                         // 72\n    // code to run on server at startup                                //\n  });                                                                  //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/tictactoe.js","sourceMap":{"version":3,"sources":["/tictactoe.js"],"names":[],"mappings":"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","file":"/tictactoe.js","sourcesContent":["var Table = new Mongo.Collection(\"table\");\nvar Counter = new Mongo.Collection(\"counter\");\n\nif (Meteor.isClient) {\n  // counter starts at 0\n  Session.setDefault('counter', 0);\n\n\n  Template.board.helpers({\n  \trows: function() {\n  \t\tconsole.log(\"Calling Rows\");\n  \t\treturn Table.find({}).fetch();\t\t\t\n  \t}\n  });\n\n  Template.row.helpers({\n  \tcolumns: function(parentContext) {\n  \t\treturn this.cols\n  \t}\n  });\n\n  Template.row.events({\n  \t'click td': function(event, template) {\n  \t\tconsole.log(\"Clicked: \" + template.data.row + \", \" + this.col);\n  \t\tvar row = Table.findOne(template.data._id);\n  \t\tvar cols = row.cols\n\n\n  \t\tcols[this.col-1].playerMark++\n  \t\tTable.update(template.data._id, {$set: {cols: cols}});\n  \t}\n  });\n\n  Template.hello.helpers({\n  \tcounter: function () {\n  \t\tvar count = Counter.findOne({});\n  \t\tconsole.log(\"Calling Counter\");\n  \t\treturn count;\n  \t}\n  });\n\n \tTemplate.hello.events({\n\t  \t'click button': function () {\n\t      // increment the counter when button is clicked\n\t      var countDoc = Counter.findOne({});\n\t      console.log(\"Button Clicked\");\t\n\t      Counter.update(countDoc._id, {$set: { count: (countDoc.count+1)}});\n\t  \t},\n\t  \t\n\t  \t'click p': function() {\n\t  \t\tconsole.log(Counter.findOne({}).count);\n\t  \t}\n\t});\n\n  \tTemplate.reset.events({\n\t  \t'click button': function() {\n\t  \t\tvar countDoc = Counter.findOne({});\n\t  \t\tconsole.log(\"Reset Clicked\");\n\t  \t\tTable.find({}).forEach(function (doc) {\n\t  \t\t\tvar cols = doc.cols\n\t  \t\t\tconsole.log(cols);\n\t  \t\t\tcols.forEach(function(cell) {\n\t  \t\t\t\tcell.playerMark = 0;\n\t  \t\t\t\tTable.update(doc._id, {$set: {cols: cols}});\n\t  \t\t\t});\n\t  \t\t});\n\t  \t}\n  \t});\n}\n\nif (Meteor.isServer) {\n\tMeteor.startup(function () {\n    // code to run on server at startup\n});\n}\n"]}}]