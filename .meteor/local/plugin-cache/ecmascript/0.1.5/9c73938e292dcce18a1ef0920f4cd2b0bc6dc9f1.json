{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"var Table = new Mongo.Collection(\"table\");\nvar Counter = new Mongo.Collection(\"counter\");\n\nif (Meteor.isClient) {\n    // counter starts at 0\n    Session.setDefault('counter', 0);\n\n    Template.board.helpers({\n        rows: function () {\n            console.log(\"Calling Rows\");\n            return Table.find({}).fetch();\n        }\n    });\n\n    Template.row.helpers({\n        columns: function (parentContext) {\n            return this.cols;\n        }\n    });\n\n    Template.row.events({\n        'click td': function (event, template) {\n            console.log(\"Clicked: \" + template.data.row + \", \" + this.col);\n            var row = Table.findOne(template.data._id);\n            var cols = row.cols;\n\n            cols[this.col - 1].playerMark++;\n            Table.update(template.data._id, { $set: { cols: cols } });\n        }\n    });\n\n    Template.hello.helpers({\n        counter: function () {\n            var count = Counter.findOne({});\n            console.log(\"Calling Counter\");\n            return count;\n        }\n    });\n\n    Template.hello.events({\n        'click button': function () {\n            // increment the counter when button is clicked\n            var countDoc = Counter.findOne({});\n            console.log(\"Button Clicked\");\n            Counter.update(countDoc._id, { $set: { count: countDoc.count + 1 } });\n        },\n\n        'click p': function () {\n            console.log(Counter.findOne({}).count);\n        }\n    });\n\n    Template.reset.events({\n        'click button': function () {\n            var countDoc = Counter.findOne({});\n            console.log(\"Reset Clicked\");\n\n            Table.find({}).forEach(function (doc) {\n                var cols = doc.cols;\n                cols.forEach(function (cell) {\n                    cell.playerMarked = 0;\n                    Table.update(doc._id, { $set: { cols: cols } });\n                });\n            });\n        }\n    });\n}\n\nif (Meteor.isServer) {\n    Meteor.startup(function () {\n        // code to run on server at startup\n    });\n}","ast":null,"map":{"version":3,"sources":["/tictactoe.js"],"names":[],"mappings":"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","file":"/tictactoe.js.map","sourcesContent":["var Table = new Mongo.Collection(\"table\");\nvar Counter = new Mongo.Collection(\"counter\");\n\nif (Meteor.isClient) {\n  // counter starts at 0\n  Session.setDefault('counter', 0);\n\n\n  Template.board.helpers({\n  \trows: function() {\n  \t\tconsole.log(\"Calling Rows\");\n  \t\treturn Table.find({}).fetch();\t\t\t\n  \t}\n  });\n\n  Template.row.helpers({\n  \tcolumns: function(parentContext) {\n  \t\treturn this.cols\n  \t}\n  });\n\n  Template.row.events({\n  \t'click td': function(event, template) {\n  \t\tconsole.log(\"Clicked: \" + template.data.row + \", \" + this.col);\n  \t\tvar row = Table.findOne(template.data._id);\n  \t\tvar cols = row.cols\n\n\n  \t\tcols[this.col-1].playerMark++\n  \t\tTable.update(template.data._id, {$set: {cols: cols}});\n  \t}\n  });\n\n  Template.hello.helpers({\n  \tcounter: function () {\n  \t\tvar count = Counter.findOne({});\n  \t\tconsole.log(\"Calling Counter\");\n  \t\treturn count;\n  \t}\n  });\n\n  Template.hello.events({\n  \t'click button': function () {\n      // increment the counter when button is clicked\n      var countDoc = Counter.findOne({});\n      console.log(\"Button Clicked\");\t\n      Counter.update(countDoc._id, {$set: { count: (countDoc.count+1)}});\n  \t},\n  \t\n  \t'click p': function() {\n  \t\tconsole.log(Counter.findOne({}).count);\n  \t}\n\t});\n\n  Template.reset.events({\n  \t'click button': function() {\n  \t\tvar countDoc = Counter.findOne({});\n  \t\tconsole.log(\"Reset Clicked\");\n\n  \t\tTable.find({}).forEach(function (doc) {\n  \t\t\tvar cols = doc.cols\n  \t\t\tcols.forEach(function(cell) {\n  \t\t\t\tcell.playerMarked = 0;\n  \t\t\t\tTable.update(doc._id, {$set: {cols: cols}});\n  \t\t\t});\n  \t\t});\n  \t}\n  });\n}\n\nif (Meteor.isServer) {\n\tMeteor.startup(function () {\n    // code to run on server at startup\n});\n}\n"]},"hash":"9c73938e292dcce18a1ef0920f4cd2b0bc6dc9f1"}
